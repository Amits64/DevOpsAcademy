name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting.
        fetch-depth: 0

    # Triggering SonarQube analysis as results of it are required by Quality Gate check.
    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@v2.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}

    # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}

  build:
    needs: sonarqube
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.4

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
        yarn install
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set current timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
      
    - name: Build and push
      id: build_and_push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: amits64/devops_academy:v${{ env.TIMESTAMP }}
      
    - name: Output Image Tag
      id: output_image_tag
      run: echo "IMAGE_TAG=amits64/devops_academy:v${{ env.TIMESTAMP }}" >> $GITHUB_ENV
      